Getting MythTV Running on Ubuntu

<!-- Date: 2004-09-21 10:07 -->
<p>
Right now I'm feeling a little special because I might be the first
person to get a full install of MythTV working under Ubuntu.  A lot
of this will just be summary information that can also be found on the
<a href="http://ivtv.writeme.ch/">MythTV Wiki</a>, but I figured I would
summarize it all here.
</p>
<p>
First a brief rundown of my system specs, so you'll know if your system
will vary or not.  It probably will as I run MythTV on a very low end
system:
</p>
<ul>
<li>AMD Athlon 700 Processor</li>
<li>Epox EP-7KXA+ Motherboard - this motherboard has DMA problems and may
cause the IVTV driver to hang, but I'm not buying a new one right now</li>
<li>768MB of PC133 Ram</li>
<li>Matrox Millenium G400 Max</li>
<li>SoundBlaster Live X-Gamer</li>
<li>Hauppauge WinTV PVR-250</li>
<li>Maxtor 45GB 5400 RPM ATA-66 Hard Disk - it's very slow</li>
</ul>
<p>
The first step you'll want to do in setting up your computer is to make
your partitions the proper way.  I got in this mess because I had a weird
formatting scheme before where the hard disk had partions of 10GB, 10GB,
10GB, 5GB, 3GB, 3GB, and swap.  Needless to say, this was not the best use
of disk space and it meant I could hold very few TV shows.  In my new install
I split up the disk with 100MB for <my:path>/boot</my:path>, 10GB for
<my:path>/home</my:path>, and 35GB for <my:path>/</my:path>.  I read that
using JFS would result in higher performance, especially for deleting, so I
decided to try that also.  Thus, <my:path>/boot</my:path> was formatted as 
ext2 while <my:path>/home</my:path> and <my:path>/</my:path> were formatted
as JFS.
</p>
<p>
Now you'll want to install Ubuntu.  There really aren't many choices for this
installation procedure, so just let it run.  You can install everything you
need afterwards.   Once you get to the desktop screen, you need to start
installing some more packages.  I hope that I have the complete list here, but
I may not.
</p>
<my:commands>
<my:comment>First you need to install your compiler...</my:comment>
<my:prompt>patrick@dreams ~ $</my:prompt> <my:input>sudo apt-get install gcc g++</my:input>
<my:comment>Next install MySQL</my:comment>
<my:prompt>patrick@dreams ~ $</my:prompt> <my:input>sudo apt-get install mysql-server mysql-client</my:input>
<my:comment>Then you need to install the QT development libraries, along with
the bindings for QT to use MySQL</my:comment>
<my:prompt>patrick@dreams ~ $</my:prompt> <my:input>sudo apt-get install libqt3c102-mt-mysql libqt3-mt-dev</my:input>
<my:comment>Finally, you're going to need the kernel source...</my:comment>
<my:prompt>patrick@dreams ~ $</my:prompt> <my:input>sudo apt-get install linux-source-2.6.8.1</my:input>
</my:commands>
<p>
The next step is to get your kernel build tree looking a bit more sane.  Here
is what you need to do for that, in a nutshell, unpack the source, fix the name
of the release in the Makefile, copy the configuration file over, and start a
build of modules, but you don't have to let it finish.
</p>
<my:commands>
<my:comment>Lots of stuff as root here, so use sudo to get a bash shell</my:comment>
<my:prompt>patrick@dreams ~ $</my:prompt> <my:input>sudo bash</my:input>
<my:output>Password:</my:output>
<my:prompt>root@dreams ~ #</my:prompt> <my:input>cd /usr/src</my:input>
<my:comment>unpack the source code - it will take a bit of time</my:comment>
<my:prompt>root@dreams /usr/src #</my:prompt> <my:input>tar -jxvf linux-source-2.6.8.1.tar.bz2</my:input>
<my:prompt>root@dreams /usr/src #</my:prompt> <my:input>ln -s linux-source-2.6.8.1 linux</my:input>
<my:prompt>root@dreams /usr/src #</my:prompt> <my:input>cp /boot/config-2.6.8.1-2-386 linux/.config</my:input>
</my:commands>
<p>
Now edit <my:path>/usr/src/linux/Makefile</a> and replace <my:verbatim>EXTRAVERSION = .1</my:verbatim> with <my:verbatim>EXTRAVERSION = .1-2-386</my:verbatim>.  Now start a kernel build to get it going, but you don't need to finish it.
Just hit ctrl-c after a little bit.
</p>
<my:commands>
<my:prompt>root@dreams /usr/src #</my:prompt> <my:input>cd linux</my:input>
<my:prompt>root@dreams /usr/src/linux #</my:prompt> <my:input>make</my:input>
</my:commands>
<p>
Now you should have a sane build environment for the kernel modules.  The next
thing to do is to leave the root shell and go back to your home directory.  
Then go to <a href="http://67.18.1.101/~ckennedy/ivtv/">http://67.18.1.101/~ckennedy/ivtv/</a> and download the newest version of IVTV driver that is patched
for kernel 2.6.  In my case it's <my:path>ivtv-0.1.10-pre2-ck110r.tgz</my:path>.
Run the following commands to unpack and install it.
</p>
<my:commands>
<my:prompt>patrick@dreams ~#</my:prompt> <my:input>wget http://67.18.1.101/~ckennedy/ivtv/ivtv-0.1.10-pre2-ck110r.tgz</my:input>
<my:prompt>patrick@dreams ~#</my:prompt> <my:input>cd ivtv-0.1.10-pre2-ck110r $</my:input>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r $</my:prompt> <my:input>cd driver</my:input>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r/driver $</my:prompt> <my:input>make</my:input>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r/driver $</my:prompt> <my:input>sudo make install</my:input>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r/driver $</my:prompt> <my:input>cd ../utils</my:input>
<my:comment>Download the firmware</my:comment>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r/utils $</my:prompt> <my:input>wget ftp://ftp.shspvr.com/download/wintv-pvr_250-350/inf/pvr_1.18.21.22168_inf.zip</my:input>
<my:comment>Extract the firmware</my:comment>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r/utils $</my:prompt> <my:input>sudo perl ./ivtvfwextract.pl pvr_1.18.21.22168_inf.zip</my:input>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r/utils $</my:prompt> <my:input>sudo depmod -a</my:input>
<my:comment>Install the kernel module</my:comment>
<my:prompt>patrick@dreams ~/ivtv-0.1.10-pre2-ck110r/utils $</my:prompt> <my:input>sudo modprobe ivtv</my:input>
</my:commands>
<p>
At this point you should have successfully installed the IVTV driver for use
on Ubuntu.  You can try the <my:verbose>cat /dev/video0</my:verbose> test as
described elsewhere on the web.  As a note, Ubuntu only ships with Totem as
the video player, and for some reason Totem didn't like the MPEGs that my
PVR-250 was spitting out.
</p>
