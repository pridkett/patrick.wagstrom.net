Things They Don't Teach You In Tip-Of-The-Day: Environment Variables in GNOME
<!-- Date: 2007-10-22 10:36 -->
<p>
<a href="http://www.ubuntu.org/">Ubuntu</a> has been incredibly
successful in large part thanks to its ease of use and great
packaging.  However, one thing they don't teach you is how to force
your <a href="http://www.gnome.org/">GNOME</a> session to export
environment variables to processes.  When a process is launched
from a terminal, you set these environment variables through
<my:pathname>.bash_profile</my:pathname>,
<my:pathname>.bashrc</my:pathname>, <my:pathname>.login</my:pathname>
or other similar files.  You can't simply do this in GNOME.
</p>

<p>
The problem I'm facing is that I need a way to set a
<my:verbatim>JAVA_HOME</my:verbatim> environment variable in
<my:program>emacs</my:program>.  The na&#xEF;ve method is to create a
launcher with the command
<my:program>JAVA_HOME=/usr/local/java/jdk1.6.0 emacs</my:program>,
after all, such syntax works from the shell and launches Emacs with
the variable set.  However, the launcher mechanism in GNOME does not
recognize this and will fail to launch.
</p>

<p>
The solution lies in a file that no one ever talks about, <my:pathname>.gnomerc</my:pathname>.  If you add the following lines to it, you should be able to export that variable to all applications launching in GNOME:</p>
<pre>JAVA_HOME=/usr/local/java/jdk1.6.0
export JAVA_HOME</pre>
<p>
This is the same syntax you'll expect in <my:program>bash</my:program>, so if you
use <my:program>bash</my:program>, you may be able to get away with symlinking
<my:pathname>.gnomerc</my:pathname> from <my:pathname>.bashrc</my:pathname>.
</p>

<my:tags>
  <my:tag>ubuntu</my:tag>
  <my:tag>gnome</my:tag>
  <my:tag>tips</my:tag>
  <my:tag>linux</my:tag>
  <my:tag>environment variables</my:tag>
  <my:tag>emacs</my:tag>
</my:tags>
  
