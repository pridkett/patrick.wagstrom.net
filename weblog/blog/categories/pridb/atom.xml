<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: pridb | My Delusional Dream]]></title>
  <link href="http://patrick.wagstrom.net/weblog/blog/categories/pridb/atom.xml" rel="self"/>
  <link href="http://patrick.wagstrom.net/weblog/"/>
  <updated>2012-05-12T20:51:14-04:00</updated>
  <id>http://patrick.wagstrom.net/weblog/</id>
  <author>
    <name><![CDATA[Patrick Wagstrom]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PriDB Status Update]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2003/12/28/dec28status/"/>
    <updated>2003-12-28T23:21:00-05:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2003/12/28/dec28status</id>
    <content type="html"><![CDATA[<p>Amazingly enough PriDB seems to be working pretty well.  I'm also working on a test project to work in tandem with it called
PriBlog.  Basically, it will use some of the features of PriDB to do interesting things with my blog.  Anyway, I'v managed to
implement the LIMIT keyword.  I also fixed the regex parser that handles the XPathQL on the server
side.</p>

<p>I've also been thinking about moving away from using XMLRPC for the interface method.  The problem is that using XMLRPC is
so easy in Python, however, it doesn't allow stateful connections, so logins have to be done using the same backwards
mechanisms that one would use to allow authentication in HTTP.  Sigh.   Anyway, right now my main goal is to get PriBlog
working with a PriDB backend.  Then I'll extend PriDB to do other cool stuff.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PriDB Query Language Intro]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2003/12/27/querylanguage/"/>
    <updated>2003-12-27T14:09:00-05:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2003/12/27/querylanguage</id>
    <content type="html"><![CDATA[<p>This is a brief introduction to what I'm thinking for PriDB's query langauage.  It's a weird mixture of SQL and XPATH right now, so
you kinda need to know both.  The most simple request will look something like this:</p>

<pre><code>SELECT "//*" FROM documentName
</code></pre>

<p>Such a query is equal to the more conventional:</p>

<pre><code>SELECT * FROM tableName
</code></pre>

<p>Except that it will select each node in the document instead of each row in the table.  Now you can also apply your usual modifiers
to a query like you can in SQL.  For instance you can execute a query like this:</p>

<pre><code>SELECT DISTINCT "//*" FROM documentName LIMIT 3
</code></pre>

<p>This will return the first three distinct elements in the return set to the user.  On the down side, I don't know a nice way in XPATH
to say only return the first three.  For instance, if you only want the first element in an XPATH query you'd use something like //<em>[1],
but you can't change that to //</em>[1-5].  All the references that I've found to limiting ask you use to XSLT
to limit.  Which is fine and dandy, but not the way I want to do it right now.</p>

<p>Another interesting note is that where clauses don't exist in this modified version of SQL, at least not right now, I may add them later.
Right now the entire where clause must be specified in the XPATH identifier.  For instance to get all nodes unique nodes that have an
attribute called name with a value of simpleName you would run the following
query:</p>

<pre><code>SELECT DISTINCT "//*[@name='simpleName']" FROM testDocument
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coming Soon...]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2003/12/23/intro/"/>
    <updated>2003-12-23T15:00:00-05:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2003/12/23/intro</id>
    <content type="html"><![CDATA[<p><a href="http://patrick.wagstrom.net/mythTorrent/mythTorrent.rss">http://patrick.wagstrom.net/mythTorrent/mythTorrent.rss</a></p>

<p>You're all bright kids, I'm sure you can figure out where this is going.</p>
]]></content>
  </entry>
  
</feed>
