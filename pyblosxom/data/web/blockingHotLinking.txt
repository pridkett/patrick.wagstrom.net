Blocking Hot Linking with mod_rewrite

<!-- Date: 2003-11-28 09:48 -->
<p>
One of the wonderful things about the Internet is how you can easily link to
other documents that are relevant to whatever topic you're preaching about.
However, one of the most reprehensible things is the process of hot linking to
images served off other people's sites.  Such was the case with <a
href="http://www.gnxp.com/">Gene Expression</a> while it seems to be a
moderately interesting weblog, and I'm kinda happy he linked to me, it was
done completely the wrong way.
</p>
<p>
Apparently many people find this whole <a
href="/weblog/random/averageJoe.xml">Tareq Kabir</a> thing from &quot;Average
Joe&quot; a lot more interesting than I do.  So the person at GNXP.com linked
to my article, which is fine, but also linked to a picture that I had snarfed
from <a href="http://www.mythtv.org/">MythTV</a>.  The problem comes from the
fact that his <my:verbatim>&lt;img&gt;</my:verbatim> tag had the complete ref
to the image on my site.  Thus every hit on his page was generating traffic on
my page.  This is a very incosiderate thing to do as it forces other people to
pay for your bandwidth.  So off to mod_rewrite land to figure out how to block
it and here's what you do:
</p>
<pre>RewriteCond %{HTTP_REFERER} !^$	
RewriteCond %{HTTP_REFERER} !^http://dreams.wagstrom.net:8080/.*$ [NC]
RewriteRule ^/resources/images/.*\.(gif|png|jpg)$ - [F] 
</pre>
<p>
Here's what's going on here.  The first line says that if the
<my:verbatim>HTTP_REFERER</my:verbatim> is empty then we should ignore the
upcoming rule.  The second line says that if the
<my:verbatim>HTTP_REFERER</my:verbatim> is a URL from my site, then we'll
ignore the upcoming rule.  The third line says that for any file that ends
with <my:verbatim>gif</my:verbatim>, <my:verbatim>jpg</my:verbatim>, or
<my:verbatim>png</my:verbatim> in my images directory, an HTTP forbidden
result will be returned.  Pretty simple and straight forward and no more
hotlinking from other sites.  If an image is ref'd from my site, it'll pass,
if it's entered without a referrer string (for instance from a bookmark or
something) it will pass also.
</p>
<p>
Another, more obnoxious alternative is to create a &quot;No Linking&quot; or
&quot;Bandwidth Thief&quot; graphic.  This is a little bit meaner and still
wastes some of your bandwidth, but can be more fun.  To do that, just change
the final rule to something like:
</p>
<pre>RewriteRule ^/resources/images/.*\.(gif|png|jpg)$ /resources/images/bandwidthThief.png [L]
</pre> 
