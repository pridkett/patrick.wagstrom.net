<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: computer | My Delusional Dream]]></title>
  <link href="http://patrick.wagstrom.net/weblog/blog/categories/computer/atom.xml" rel="self"/>
  <link href="http://patrick.wagstrom.net/weblog/"/>
  <updated>2012-05-12T20:51:14-04:00</updated>
  <id>http://patrick.wagstrom.net/weblog/</id>
  <author>
    <name><![CDATA[Patrick Wagstrom]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Raid 1 Performance on Windows 7]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2011/05/10/raid-1-performance-on-windows-7/"/>
    <updated>2011-05-10T19:44:56-04:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2011/05/10/raid-1-performance-on-windows-7</id>
    <content type="html"><![CDATA[<p>About a year ago I ditched Ubuntu and MythTV on my media center box for Windows 7 Ultimate. To be honest one of the main reasons I did this was for NetFlix, but also because I got tired of having to tweak my media center all the time and Windows 7 Media Center just works. Also Windows 7 is smart enough to know how to sleep and wake up from sleep, saving my lots of money over the course of a year.</p>

<p>In order to ensure that I never lose any episodes of high quality television programs, I keep my boot and recorded television programs on a Raid 1 (mirror) set of 2 TB drives. Because all of the data is copied across two different drives in theory it have higher speed reads than a single drive, but lets take a look. I admit this isn't the most intelligent of tests, as it's simply done using ATTO Disk Benchmark. First, the results for an individual 2TB Samsung drive:</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2011/05/Independent_Overlapped_0.5_to_8192_1GB.png">
		<figcaption>Performance for a single 2TB drive </figcaption>
	</figure></notextile></div></p>

<p>Next, the performance for a pair of 2TB Samsung drives working in a RAID-1 mirror set:</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2011/05/Mirrored_Overlapped_0.5_to_8192_1GB.png">
		<figcaption>Performance for a mirrored pair of 2TB drives </figcaption>
	</figure></notextile></div></p>

<p>As we see, there is very little difference between the two. In almost all cases the two setups are within about 10% of each other. There clearly is no intelligence in Windows 7 for spreading reads across multiple drives. One of the major side effects of setting up a RAID 1 is that when something goes wrong you'll need to rebuild your mirror. Unfortunately, this seems to happen much more often would be desirable and it often renders the machine nearly unusable. However, contrary to my suspicions, this has nothing to do with massively decreased disk performance:</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2011/05/Resynching_Overlapped_0.5_to_8192_1GB.png">
		<figcaption>Performance of mirrored 2TB drives while resynching </figcaption>
	</figure></notextile></div></p>

<p>I have no idea what the spike in the middle is for. It's clear, however, that the reason for the system bogging down is not because of decreased drive performance but rather because of other issues. This might be CPU related as my media center box is running on a very old AMD Athlon64x2 4400+ on a motherboard that is almost six years old. So, the resynching problems might be because of CPU issues, or it could be because of something else (perhaps CrashPlan is doing something weird). I really have no idea right now.</p>

<p>While I was benchmarking I also decided to benchmark my 1st generation USB drobo with 2x1TB and 2x2TB drives in it. You can see where this going. Performance is atrocious. Glad I use it for backup storage and videos.</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2011/05/Drobo_Overlapped_0.5_to_8192_1GB.png">
		<figcaption>Drobo benchmark performance. You didn't think it would be any good, did you? </figcaption>
	</figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Handle a Bug]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2009/09/08/how-to-handle-a-bug/"/>
    <updated>2009-09-08T19:55:23-04:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2009/09/08/how-to-handle-a-bug</id>
    <content type="html"><![CDATA[<p>It’s no secret that almost all software has bugs. Even if you are lucky enough to understand how to formally verify a program, odds are that it won’t work for your program. It’s just far too difficult. Rather than eliminate all bugs, which is next to impossible to do, software engineers have sought ways to minimize the number of bugs present in a system and ensure timely responses when bugs are discovered in the field.</p>

<p>For a software engineer this typically means a suite of test cases. Each one is a carefully constructed situation that can be programatically reproduced. When a defect is found in the system, a test case is written that exercises the defect. Before future versions of the software are released the test cases must all pass. In rare cases you’ll find a team using full-on test-driven development where test cases are written before code is written for new functionality, but the basic process is the same.</p>

<p>From the end user perspective, this usually means patches for the software. In Windows these are often delivered via Windows Update or Office Update, although a myriad of programs have other more annoying ways to tell you that they need to be upgraded. In Mac OS X there is the software update feature that checks for major updates. Within Linux there is apt, or another equivalent tool that checks for updates on almost all software on the system. Why Mac OS X and Windows only check for updates on apps provided by the OS manufacturer and not for the whole system, as Linux does, could be the subject of another whole article.</p>

<p>What happens when a bug slips through the cracks? When happens when a bug is known, has been reported, is routinely experienced by hundreds or thousands of individuals, but doesn’t get patched through these methods? The result is an exercise in frustration that will leave many users searching for a new solution.</p>

<p>I’m going to illustrate this problem with a bug that I recently encountered. The time was around 1am on the Monday morning of Labor weekend. Papers were due at 6am for a major international conference, and I was wrapping up final revisions so I could go to bed. We were using Microsoft Word 2007 to create an academic paper that had many equations present. Submissions to the conference were required to be in PDF form, for which I typically use <a href="http://www.primopdf.com/">PrimoPDF</a> in Windows, although I realize that Office 2007 has native PDF support. I clicked through to have PrimoPDF create a PDF and this is what I saw:</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2009/09/missingequations.png">
		<figcaption>Those white spaces are where my equations used to be. </figcaption>
	</figure></notextile></div></p>

<p>That’s interesting, where did all of my equations go? I’m aware that word sometimes has strange settings that change the actual print output by removing things such as graphics, I looked at the print preview and double checked all my settings. Everything looked normal, the equations showed up in the print preview. I proceeded to try about two or three other PDF engines but had no luck in the process. It appeared that my document did not want to retain its equations.</p>

<p>I started to panic with thoughts of having to convert the paper to a different format at this late stage of the game. I googled around and found a variety of forum posts that provided suggestions. The first was simple enough, just use the native PDF support in MS Office 2007. I clicked through and I had a PDF of my document, but the quality was less than stellar, especially when on viewed on a Mac.</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2009/09/badequations.png">
		<figcaption>It seems like those curves are made up straight lines, almost as though a kindergarten student cut them out of construction paper </figcaption>
	</figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2009/09/fonts.png">
		<figcaption>Windows is on the left, Mac is on the right.  Here I though that PDF was supposed to look the same everywhere! Silly me </figcaption>
	</figure></notextile></div></p>

<p>The problem results from the fact that Office 2007 won’t embed all of the fonts into the PDF document, rather it will try to provide alternative options or convert the fonts to a bitmap format if it can’t. Why won’t it embed all the fonts? Concerns about licensing — basically unless Windows can verify it has a license to redistribute the font in the PDF file, it won’t embed the font and you’ll be left with something less than awesome.</p>

<p>The next suggestion was to simply save the doc as an Office 2003 document. The solution said that the equations wouldn’t be editable anymore, but that they’d still show up. That was fine as I was done with paper and just needed a one-off version to submit to the conference. Unfortunately, rather than providing something like Wikipedia, which renders the equations to a high resolution PNG file and then embeds the image in a web page, MS Office converts the equations so they’re already pre-blurred from having drank too much. Once again, this was not going to work for academic work.</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2009/09/word2003.png">
		<figcaption>Can you spot the equations?  They look like they were rendered on a Hercules graphics card </figcaption>
	</figure></notextile></div></p>

<p>Although those two options “worked”, they were what are termed “workarounds”, and not even good workarounds, they were poor workarounds that provided decreased functionality. I work very hard to create high quality academic papers that look good, so I expect my tools to perform the tasks they advertised when I paid for them. I wasn’t going to submit something that looked amateurish.</p>

<p>Digging around some more and getting more creative with my Google query and finally stumped upon the <a href="http://support.microsoft.com/kb/960985">Microsoft Support Page for my bug</a>.  Apparently, this bug only affects systems that run the combination of Microsoft Office 2007 and Windows XP. If I were to use a system with Windows Vista, I should be fine.  Great, my wife has Vista Enterprise on her Tablet PC, so I copy the document over, and attempt to create a PDF of the document.  The equations look just fine, but wait, now it’s not printing half of my images.  Ughh.</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2009/09/brokenfigure.png">
		<figcaption>I swear I designed both the left and right sides of this figure </figcaption>
	</figure></notextile></div></p>

<p>Finally, I attempt the actual fix for Windows XP.  Apparently the problem is somehow tied up between Windows XP, Office 2007, and right-to-left language support (for languages like Thai and Arabic). The knowledge base article provides helpful instructions on how to install support for those languages.  After following the instructions you’ll get the warning:</p>

<blockquote><p>You chose to install the Arabic, Armenian, Georgian, Hebrew, Indic, Thai and Vietnamese language files. This will require 10 MB or more of available disk space. The files will be installed after you click OK or Apply on the Regional and Language Options dialog box.</p></blockquote>

<p>Oh no!  10 MB of disk space?  On my 7mbit DSL line that will take almost 20 seconds to download.  Not to mention it will take up such and small portion of my 500GB drive on my laptop I’m not even going to worry about it.  But then the dreaded message pops up:</p>

<p><div class='bogus-wrapper'><notextile>	<figure class='center'>
		<img src="/media/2009/09/windowscd.png">
		<figcaption>OMG!  Are you serious‽‽ </figcaption>
	</figure></notextile></div></p>

<p>Seriously, WTF? There is no option to download the patch from the Internet.  I see no way that such a small component could be considered a marketable piece of IP, as both Mac OS X and Linux have far superior support for multiple languages and there are no other operating systems that would want to steal this feature.  This left me with the realization that to fix my problem I was going to need to run around my still largely packed apartment in Minneapolis to find a CD that I hadn’t used in years. A CD to fix a bug that has been known about for a long time and is the result of strange interaction between two components, both of which have automatic update features. Did I mention it was now 2:30am?  I shudder to think of my frustration if I had been either 1) at my place in New York, knowing that the CD was in Minneapolis or 2) working on a machine without an optical drive and not in possession of an optical drive around to install the upgrade.  Of course, at that point I probably wouldn’t have worried that much, instead I’d probably download a copy of the CD off the seedier side of the intarwebs.</p>

<p>I’m using this as an example of how not to handle a bug in multiple different ways.  Firstly, the bug seems common enough that MS should have had a test case for it.  It should have been caught in the development process and feature check for the equation editor.  Equations and graphics often go together on the same page, and it’s not just Ph.D. researchers who need them, I remember using equations and graphs on the same page when using Word 6.0 for Window 3.1 to type up lab reports for my high school biochemistry class.  It’s great that MS sells a version of Office for Students and Teachers which has this wonderful bug — at least it gets them to set their software expectations low from the beginning.  Now, a test case may not have caught it before it was released, but I know that the bug has been around long enough that a test case could have been created for the numerous service packs for Office and Windows that have been released since the bug was first found.  Most glaring is the fact that the bug wasn’t even fixed with Windows Vista, it just manifests itself in a new and creative way.  Test driven development may not have caught this, but I can’t help but wonder if it’s part of the build process at Microsoft.</p>

<p>Second, reading the support document on Microsoft’s site makes it sound a little like the Office and Windows teams were left pointing fingers at each other.  The end user doesn’t care what component is broken, they just want it fixed.  They don’t care if it requires an extra 10MB of disk space. They just want their program to function as advertised.  While I’m fine with working random command lines and installing random components, most end users don’t like this at all.  This is a process that should have been fixed by a service patch for either Office 2007 or Windows XP.  Unfortunately, neither team decided it was worth their time and the end user is left to pay the price.</p>

<p>Finally, the solution of requiring the CD reminds me a little too much of 2000 (yes, I’m aware that XP is from 2000, but it still is the best OS from MS until Windows 7 is officially released in a few weeks).  Most computers have gone mobile since 2000 and many have lost the CD drive in an effort to reduce size and power consumption.  Automatic update solutions have made users comfortable with pulling updates over the Internet, so why does this still require a CD?  This is a component that has no independent commercial value and an update to Windows XP could have just as easily forced support on everyone — it eliminates a lot of those boxes you see on web pages written in right-to-left languages too — or at the very least made it a download.</p>

<p>The biggest problem that I see here is that the bug was a complicated one.  I shudder to think of the tester who was responsible for finally figuring out that it was the third component, right-to-left language support, that caused the problems. However, the solution was needlessly complicated and filled with half-solutions that caused just as many problems as they fixed. As software engineers we can do better. Integrated update systems are a nice start — within APT it is possible to say that an update to an application requires an additional update to a different application.  For example, an update to Open Office could signify that it requires an updated version of iconv — a library for translating character sets.  When you update Open Office the new version of iconv would come along with it.  See, it’s not that hard, and it’s something that Linux has been doing right since 1995.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Time Synchronization with VMWare]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2008/02/15/vmware-time-synchronization/"/>
    <updated>2008-02-15T20:49:00-05:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2008/02/15/vmware-time-synchronization</id>
    <content type="html"><![CDATA[<p>One of the major issues with utilizing a virtual machine for a server is that of time synchronization.  VMWare normally has access to a real time clock handler that helps to synchronize time, but even that causes time to skew.  This issue becomes more prominent with modern processors that support CPU frequency scaling.  However, there are many cases where even the VMWare custom kernel module can't manage the time skew properly.  Such was the case with my updated VMWare virtual machine -- to put it simply, time had stopped.</p>

<p>Looking around, it appears that some of the problem may be to the new tickless features in the linux kernel.  Basically, this feature allows the system to stop waking up periodically if there is nothing to do. On desktop and laptop machines this saves a lot of power and is a key feature that has helped the <a href="http://www.laptop.org/">OLPC</a> be such a power miser.  However, it also really screws with the clocks in virtual machines, and may be cause of other issues.  I've also read that there are issues with heavy disk I/O and Gutsy in VMWare Server -- which is my virtualization platform of choice.</p>

<p>Previously, with the time issue, I would fix problems by adding in a cron job to periodically synchronize the date with a remote system. It's important to note, that ntp won't work because it tries to gradually synchronize the time -- so it will never catch up.  However, using a cron job on the virtualized system relies on the virtualized system eventually hitting even minute marks.  Last night in the course of 12 hours, my time advanced 32 seconds; cron is not an option. The solution is to have the host operating system, which can keep time, periodically SSH into the virtualized machine and synchronize the time.  Getting started, you'll need to activate the time service in xinetd on the host operating system.  Open up /etc/xinetd.d/time and change the lines that say</p>

<pre><code>disable = yes
</code></pre>

<p>to say "no".  Restart xinetd by running /etc/init.d/xinetd restart and you'll now be able to rdate to your host machine.</p>

<p>The next step is to create the ssh key and setup the cron job to connect to guest operating system.  These commands should do it for you.  Hit enter to leave it without a passphrase.  Then, copy the key to the guest operating system.</p>

<pre><code>root@host:~# ssh-keygen -t dsa -C "automated RDATE ssh key" -f id_dsa.rdate
Generating public/private dsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in id_dsa.rdate.
Your public key has been saved in id_dsa.rdate.pub.
The key fingerprint is:
d4:5f:01:83:ee:df:e0:e4:ea:ff:0a:6e:50:d1:e2:d3 automated RDATE ssh key
root@host:~# scp id_dsa.rdate.pub USERACCOUNT@GUEST:
</code></pre>

<p>Now that the key is on the guest, it's time to enable a passwordless login.  First, login to the guest machine, and open up a root shell using sudo -s.  Then run the following command to add the new key to your ~/root/.ssh/authorized_keys.</p>

<pre><code>echo 'command="rdate -s HOST"' $(cat id_dsa.rdate.pub) &gt;&gt; ~root/.ssh/authorized_keys
</code></pre>

<p>The final step is to edit your /etc/crontab on your host system, and make the time synchronization happen every five minutes or so.</p>

<pre><code>*/5 * * * * root ssh -i ~root/.ssh/id_dsa.rdate root@GUEST "rdate -s HOST"
</code></pre>

<p>Now, you should have a nice infrastructure set up where your VMWare virtual machine will never be more than five minutes away from the actual time.  It's important to note that there are a few alternative ways of doing this.  For example, one could bypass the usage of rdate entirely through some clever shell scripting that passes the time on the host system to the time command on the remote system.  In my experience, this works in a homogeneous environment, but not every system can interpret times in the same way, so sticking with rdate seems like a good compromise.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye OpenBSD]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2008/01/03/goodbye-openbsd/"/>
    <updated>2008-01-03T00:37:00-05:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2008/01/03/goodbye-openbsd</id>
    <content type="html"><![CDATA[<p>My servers have run <a href="http://www.openbsd.org/">OpenBSD</a> since sometime in 1998.  I still have a few really ancient official CD sets laying around for OpenBSD 2.3 (May 1998), 2.5 (May 1999), and 2.7 (June 2000).  My name can be found on the <a href="http://www.openbsd.org/donations.html">OpenBSD Donations page</a>, and I think that <a href="http://www.openbsd.org/faq/pf/">PF</a> is one of the sweetest pieces of software I've seen.   I've ran OpenBSD on x86, PPC, and Sparc on both physical and virtual hardware.  I've used it as a mail server, spam filter, firewall, web server, database server, and even an X11 terminal.  OpenBSD is just a well engineered piece of software that works well and doesn't need much maintenance.</p>

<p>Last year, in an effort to reduce clutter in my house and ease my power bill, I <a href="/weblog/computer/virtualized-server.txt">changed from a physical to virtual OpenBSD box as my main Internet server computer</a>.  For the most part I had some good luck, it worked pretty well once I changed the virtual NIC from a PCNet to an E1000. Back in October I decided that this holiday season I would upgrade to the 4.2 release of OpenBSD, which contained a lot of features I was looking forward to such as a port for Python 2.5 and the new <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vic&amp;sektion=4">vic VMWare network driver</a>.  About a week after I made this decision, my Apache server process began to randomly segfault when using gzip compression to serve web pages -- as someone who runs their website off a cable modem, this was a hit that I really didn't want to take. I disabled gzip compression and decided to look at it again over the holidays.</p>

<p>The process of bringing up a new virtual machine with <a href="http://www.vmware.com/products/server/">VMWare server</a> is nearly brain dead.  I can create multiple virtual machines in a matter of minutes.  For this upgrade the choice was made to start fresh to avoid some of the botched installs from previous versions of tools in the original virtual machine.  My strategy was to install the basics for the machine, then compile the ports I needed -- apache2, subversion (with apache support), python 2.5, screen, and irrsi -- were at the top of my list.  Wait, you may say, OpenBSD offers compiled packages for these -- no need to compile.  This is true, but the Python setup includes the tkinter libraries, which no ones uses anymore and forces X on my system.  Subversion also links to some packages I'll never use again.</p>

<p>After some fighting the build process got running, but I almost immediately hit a snag.  Programs were complaining about <a href="http://expat.sourceforge.net/">expat</a> not being present, and the port kept on telling me it was included as of OpenBSD 4.2.  As I had OpenBSD 4.2 installed, I could tell that it was not included.  My first strategy was to lie and build the package regardless.  While this allowed me to build some software, it quickly caused problems.  I was soon modifying my FLAVOR environment variable with reckless abandon.  In the end, I broke enough things that I needed to start over.  Luckily, VMWare makes that simple.</p>

<p>A little sleuthing discovered that for some reason in OpenBSD, expat is currently a part of the xbase package, and if I wanted the development headers I also needed the xshare package too.  What?  Why I do need X for everything all the sudden.  Whatever, I installed those packages, rebuilt the software, but still needed to fudge around with lots of environment variables to keep it from installing TCL with anything that had optional TCL bindings.  Don't even get me started on the headache of keeping Ruby off my system.  After about six hours of actual work at fighting with it, much more if you count compilation, I had the software I thought I needed installed.  A little testing revealed that all of my web services still worked.  Great! Then I turned on gzip and the segmentation faults returned.  I returned to the default configuration, and the segmentation faults continued.  I debugged the program, realized I need to do some nasty patching, and concluded that this wasn't going to be the proper choice.</p>

<p>It was time to consider something else.  I really wanted to run a BSD system still, I figured I'd give <a href="http://www.freebsd.org/">FreeBSD</a> a shot again.  For some reason their automatically discovered mirror for me was ungodly slow, worse than dialup.  Going through <a href="http://tor.eff.org/">tor</a> actually managed to speed things up.  Wow, that's strange isn't it?  I also noticed they were close to a release -- I don't want to run pre-release software and I didn't want to have to upgrade, and I'm really impatient.  Crap.  By this point it was the 27th, and I was supposed to leave for a week in just a few days.</p>

<p>Suck it up, install <a href="http://www.ubuntu.com/server">Ubuntu Server</a>.  I really didn't want to run Linux, and Ubuntu Server may have a bit too much stuff on it in the default install.  I was already starting to feel dirty.  A little more digging revealed a nifty project, <a href="http://www.ubuntu.com/products/whatisubuntu/serveredition/jeos">Ubuntu JeOS</a> (Just Enough Operating System), a specialized and stripped down version of Ubuntu that has the core software and an optimized VMWare kernel.  The download was pretty small, at about  50MB or so. Installation was a breeze and incredibly straightforward.  As an added bonus, VMWare tools compiles for Linux, to further improve performance.  A few apt-get commands later and my system was running. What's better is that the packaging system didn't require me to install X11, TCL, Ruby, PHP, or MySQL for my server setup.  I was able to get just the tools I needed.  Total installation time for everything, 41 minutes.  That includes the time to copy all my web files over, port the httpd.conf file to the  Ubuntu style of multiple configuration files, and update some absolute paths in scripts.</p>

<p>Next up was to see how fast it was.  I always loved how few processes I'd see running in my OpenBSD machine.  Hammering the machines over and over an testing the speed of response with <a href="http://developer.yahoo.com/yslow/">YSlow</a> showed the Linux box to complete requests in about 40% of the time of the OpenBSD box when requested from the local LAN.  Furthermore, the responses were compressed, which means a great saving of time over the line.  I was hooked -- sorry OpenBSD, you've been replaced.</p>

<p>Of course, there is a potential cost here.  What about the security of my new server?  What about stability?  What about updates?  As far as security goes, I'm already being fairly smart by running it in as a virtual machine.  The main filesystems are backed up nightly to both local and remote systems, and about once a month, a <a href="http://dev.riseup.net/backupninja/">backupninja</a> script shuts down the machine, creates a snapshot of the full machine, then restarts it.  That gives me about 10 minutes of downtime every month -- I'm sure the spiders will understand.  I also am not running any unnecessary servers -- just apache2, an instance of <a href="http://www.cherrypy.org/">CherryPy</a> for <a href="http://pennave.sf.net/">PennAve</a>, and very restricted <a href="http://www.openssh.com/">OpenSSH</a> for remote access -- that's it.  I'm hoping I'm in good shape with that, but security is something you can never guarantee unless the machine is off, has no drives, and lacks any sort of persistent memory (of course, I'm sure that even then there may be a way to find some sort of electromagnetic residue in the RAM).  Stability wise, I'm not entirely certain.  Ubuntu Dapper on my MythTV machine has been excellent, while Gutsy on my laptop is sometimes flaky -- but that may also be because of a long upgrade chain going back up to March of 2005 on this machine.  Finally, I'm pretty sure that using APT makes upgrades, especially security related upgrades, even easier.  I don't need to worry about seeing that a patch was released and installing it by hand.  It just happens -- yes I'm placing trust in a remote entity, but I can handle that.  I just want my machine to work.</p>

<p>So, after two days of mucking around with OpenBSD, I finally got Ubuntu JeOS to just work, and I'm very happy with it.  I'm sorry to see OpenBSD go, but it was just too difficult to work with.  In particular, here's some issues that really need to be addressed to make it competitive with what JeOS offers:</p>

<ul>
<li>If you say you include expat, really include it, don't place it in two different packages for X.  I don't need X on my server.</li>
<li>Finer grain package control.  Some packages are getting pretty good at creating subpackages for optional components -- subversion is a good example of this.  Other packages, such as Python, could really use some help here.</li>
<li>Inheritance of the FLAVOR environment variable.  If I compile subversion as NO_TCL or NO_RUBY, that should cascade down to swig.  I had to literally watch every dependency as it was compiled to make sure that it was going to decide I needed TCL, TK, and Ruby.</li>
<li>Automated checking for security patches.  I'm not sure if OpenBSD has this, but it wasn't obvious how to do it.  But, then again, it's not immediately obvious how to use apt either.</li>
</ul>


<p>For the time being, OpenBSD and I have parted ways.  In a few years when it comes time to upgrade my server again, we may again join forces.  Of course, with the continual increase of software as a service, in a few years, there may be no need for me to run my own server anymore</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm now virtualized]]></title>
    <link href="http://patrick.wagstrom.net/weblog/2006/05/21/virtualized-server/"/>
    <updated>2006-05-21T15:48:00-04:00</updated>
    <id>http://patrick.wagstrom.net/weblog/2006/05/21/virtualized-server</id>
    <content type="html"><![CDATA[<p>To my loyal reader (or perhaps readers, who knows) -- you probably noticed some issued with the accessibility of this site over the past few days.  It seems like two different things were conspiring to take down my site.  The first is that my uplink connection has been a little flunky -- I've got a WRT54Gv1 that I use for my net access and that's been acting really strange.  The second is that my server, <a href="http://scissors.wagstrom.net/">scissors</a> has been acting a bit flunky.  Before I go too far, a little description of the box is necessary.</p>

<p>The machine is a circa 1997 AMD K6-200 with 96MB of RAM and Quantum Fireball 4.3GB hard disk -- this was pretty hot stuff when I went to college in 1997.  Yes, that's right, it's my first computer from undergraduate.  The machine first started to have problems in the fall of 1999.  At the time I thought it was disk issues, so I bought a new disk.  That didn't fix the problems, in fact, I think I threw out at perfectly good 8GB disk at the time because of the issues.  Really, it was just problem with the IDE cables in the machine, but I digress. That year I was working more or less full time and going to school, so I had money to burn. I plunked down some cash for an Athlon 700 machine, and that machine became my backup server machine (replacting a Pentium 60).  This is also where the machine got the name scissors, for scissors.dtd.iit.edu.  I used some of the original parts in my newer machines, this left scissors with a black and with text only video card, and a couple of ISA ethernet cards (at least they're 3com).  Yup, 10mbps is the max ethernet rate on the machine.</p>

<p>This point was also the first time that I installed OpenBSD on it.  I believe it was OpenBSD version 2.5 or thereabouts - I actually paid for the CDs and have them laying around.  Since then, the machine has been upgraded to newer operating systems twice, first to OpenBSD 2.9, then again to OpenBSD 3.3.  It's served as a mail server, online game server, and most importantly my personal web server for the last few years.  At some point, probably in early 2003 the fan on the CPU died, but it didn't seem to affect performance, so I didn't care.  At some point later the fan on the power supply died -- once again it didn't seem to affect performance so I didn't care.  I now had a basically entirely silent machine.  Cool.  As an added bonus, according to my Kill-a-watt device, it sips power at a consumption of 33 watts.  This makes it nice and affordable to run.</p>

<p>However, the machine is now approaching it's ninth birthday.  It's had a good run -- but all good things must come to an end.  I've been getting rid of my old stuff and well scissors, it's time for you to go.  You've been replaced by the forward marching tide of technology. However, it's a real pain to reinstall web servers all the time.  My solution?  Virtualization.</p>

<p>Thanks to <a href="http://www.vmware.com/products/server/">VMWare Server</a> and my copy of <a href="http://www.vmware.com/products/ws/">VMWare Workstation</a>, I've created a very nice little <a href="http://www.openbsd.org/">OpenBSD</a> virtual machine.  Best of all, I've got all the services that previously were running between a couple of different servers consolidated onto this single box.  That means this virtual machine now acts as my trac, subversion, dav, and person web server.</p>

<p>Virtualization has quite a few benefits.  One of the biggest ones is that I can just copy the virtual machine from one physical computer to another.  This makes upgrades a breeze.  (As an aside, it also makes me wonder why I don't just install VMWare Server on my <a href="http://www.mythtv.org/">MythTV</a> box in the living room and drop down to a single computer that is on 24/7.  Probably has something to do with the printer we never use I guess.)  Also, being virtualized, it let's me test other configuration changes easier.  I can take a snapshot of the server in workstation and try an upgrade or change in software with no risk to the live machine.  The VMWare Server console lets me manage everything from my laptop too.  Wow.</p>

<p>I know that someone out there will believe that I'm a sellout because VMWare is closed source.  Which is probably partially true.  However, I've been using VMWare since it first came out.  Back at <a href="http://www.lecltd.com/">LEC Ltd</a>, we used VMWare on the developer workstations to see how the web pages would look on different platforms.  Of course, we never thought about using it for server use -- but now it seems that's what the cool kids are doing.  An astute reader might wonder why I didn't choose <a href="http://www.cl.cam.ac.uk/Research/SRG/netos/xen/">Xen</a> or <a href="http://fabrice.bellard.free.fr/qemu/">QEMU</a>.  With regards to Xen, I've heard that Theo considers Xen to be more of a toy, however he might be coming around to it (this was a year or more ago now).  I did notice that there is a <a href="http://archives.neohapsis.com/archives/openbsd/2006-05/0260.html">Summer of Code request to make OpenBSD a native Guest OS</a>.  That might be really interesting, but it's not here yet.  For QEMU, the big issue is that if you want native performance you need to the unfree accelerator program.  That, and it's not as feature rich as VMWare.  Given that I have extensive VMWare experience too, it seemed like this was the fastest way to get running again.</p>

<p>So what is all this saying?  Basically, if you're reading this weblog entry you're connected to my VMWare server instance, now called "<a href="http://donkey.wagstrom.net/">donkey</a>" running OpenBSD 3.9.  Well, if this post is recent that's what happening.  In the future I should be able to upgrade pretty easy.  For now, the host machine for Donkey is a Pentium 3/900 with 640MB of RAM.  So far, so good.  I took extensive notes about the whole process and will be putting together a nice writeup soon.  If you've got questions about the process, feel free to email me in the mean time.</p>
]]></content>
  </entry>
  
</feed>
